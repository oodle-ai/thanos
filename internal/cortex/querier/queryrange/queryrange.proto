// Copyright (c) The Cortex Authors.
// Licensed under the Apache License 2.0.

syntax = "proto3";

package queryrange;

option go_package = "queryrange";

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cortex/cortexpb/cortex.proto";
import "ptypes/any/any.proto";

message PrometheusRequestHeader {
  string Name = 1;
  repeated string Values = 2;
}
message PrometheusRequest {
  string path = 1;
  int64 start = 2;
  int64 end = 3;
  int64 step = 4;
  google.protobuf.Duration timeout = 5;
  string query = 6;
  CachingOptions cachingOptions = 7;
  repeated PrometheusRequestHeader Headers = 8;
  string stats = 9;
}

message PrometheusResponseHeader {
  string Name = 1;
  repeated string Values = 2;
}

message PrometheusResponse {
  string Status = 1;
  PrometheusData Data = 2;
  string ErrorType = 3;
  string Error = 4;
  repeated PrometheusResponseHeader Headers = 5;
}

message PrometheusData {
  string ResultType = 1;
  repeated SampleStream Result = 2;
  PrometheusResponseStats stats = 3;
  Analysis analysis = 4;
}

message PrometheusInstantQueryResponse {
  string Status = 1;
  PrometheusInstantQueryData Data = 2;
  string ErrorType = 3;
  string Error = 4;
  repeated PrometheusResponseHeader Headers = 5;
}

message PrometheusInstantQueryData {
  string ResultType = 1;
  PrometheusInstantQueryResult Result = 2;
  PrometheusResponseStats stats = 3;
  Analysis analysis = 4;
}

message PrometheusInstantQueryResult {
  oneof result {
    cortexpb.Sample scalar = 1;
    StringSample stringSample = 2;
    Vector vector = 3;
    Matrix matrix = 4;
  }
}

message Vector {
  repeated Sample samples = 1;
}

message Matrix {
  repeated SampleStream sampleStreams = 1;
}

message PrometheusResponseStats {
  PrometheusResponseSamplesStats samples = 1;
}

message PrometheusResponseSamplesStats {
  int64 totalQueryableSamples = 1;
  repeated PrometheusResponseQueryableSamplesStatsPerStep totalQueryableSamplesPerStep = 2;
}

message PrometheusResponseQueryableSamplesStatsPerStep {
  int64 value = 1;
  int64 timestamp_ms = 2;
}

message SampleStream {
  repeated cortexpb.LabelPair labels = 1;
  repeated cortexpb.Sample samples = 2;
  repeated SampleHistogramPair histograms = 3;
}

message Sample {
  repeated cortexpb.LabelPair labels = 1;
  double sampleValue = 2;
  int64 timestamp = 3;
  SampleHistogram histogram = 4;
}

message StringSample {
  string value = 1;
  int64 timestamp_ms = 2;
}

message SampleHistogramPair {
  int64 timestamp = 1;
  SampleHistogram histogram = 2;
}

message SampleHistogram {
  double count = 1;
  double sum = 2;
  repeated HistogramBucket buckets = 3;
}

message HistogramBucket {
  int32 boundaries = 1;
  double lower = 2;
  double upper = 3;
  double count = 4;
}

message CachedResponse  {
  string key = 1;

  // List of cached responses; non-overlapping and in order.
  repeated Extent extents = 2;
}

message Extent  {
  int64 start = 1;
  int64 end = 2;
  // reserved the previous key to ensure cache transition
  reserved 3;
  string trace_id = 4;
  google.protobuf.Any response = 5;
}

message CachingOptions {
  bool disabled = 1;
}

message Explanation {
  string name = 1;
  repeated Explanation children = 2;
}

message Analysis {
  string name = 1;
  google.protobuf.Duration executionTime = 2;
  repeated Analysis children = 3;
}
